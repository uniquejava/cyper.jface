21:21 2012-7-8


3:23 2012-7-8
更新如下内容：
(1)实现了对选中SQL的comment及uncomment
(2)实现了对选中行的indent及unindent
(3)实现了在文本框内按tab键缩进，按shift+tab反缩进.

除了实现PL/SQL中工具栏上那两个注释及取消注释的功能外
还实现了使用Ctrl+/ 注释/取消注释 选中的行.


22:04 2012-7-7
今天放假，小幅更新如下内容：
(1)增加新功能：New Tab(Ctrl+N),新建SQL标签页

(2)自动执行光标所在处的SQL段落,而不必提前选中：
intelligent SQL selection

(3)可以在toolbar上切换用户.
switch user session from toolbar


17:07 2012-7-6
快点到16号吧!不要让我上班这么闲。。导致我的业余项目PL/SQL进度这么快。
今天下午主要是将主界面左侧的树型结构稍微完善了一下，
经过14天的奋战，基本定型了，比我想象的要做的快。
接下来做

(1)表结构缓存（这样当断网的时候，同样可以登录进来查看表结构等。。。）

(2)按需加载（这个需要研究一下VIRTUAL TABLE）

(3)根据表结构进行代码提示
（和java的方法提示一样，除了字段拼写提示，还提示字段类型及字段的comment)



1:57 2012-7-6
complete all the functions on connection dialog.
including clone/add/remove connection info.
see latest screenshots for detailed information.



17:56 2012-7-5
新增登录对话框(界面和PL/SQL Developer的登录框相差无几)。
数据库连接对话框！
新增配置文件及相应的读取保存工具类。
配置文件connections.xml的格式如下(不存在时会自动创建)
<?xml version="1.0" encoding="UTF-8"?>
<connections>
	<connection name="localhost_sample">
		<host>localhost</host>
		<port>50000</port>
		<database>SAMPLE</database>
		<schema></schema>
		<username>CYPER.YIN</username>
		<password></password>
	</connection>
</connections>
学到了一个新命令git add -A
使用后工程中若有删除的文件，不必使用git rm了..
来自http://stackoverflow.com/questions/2668761/git-rm-equivalent-for-add


0:12 2012-7-5
最近好多IT男猝死，今天我要早点休息。
今天把工具栏整齐了，新增了一大堆Action。
最新的UI也抓了个图扔到doc/ui目录下去了。

最后记一下去图片白色背景的过程吧(已录下视频)：
打开gif
先把图形变成RGB模式 Image->Mode->RGB color
双击右下角layers中的图片，将图片从background变成layer
Z放大镜(alt缩小)放大之
W魔术棒（连续，选择白色部分）
M矩形选区（去除多选的部分）
Del删除（删除背景）
Ctrl+D取消选区
C裁剪（大小设为16px * 16px)
V移动
Ctrl+S
回车
回车
只怪工具栏的图片太多，一遍又一遍，搞得我麻木了！


2:09 2012-7-4
今天新增了许多SQL Editor的编辑功能。
比如Ctrl+A全选,Ctrl+D删除选中的行
Ctrl+W关闭标签页,打开，保存等。。
PS了新的工具栏图标
CyperDataStudio
修改为继承ApplicationWindow
同时将SQLWindow改为继承自CTabFolder


1:01 2012-7-3
哈哈，最新的ui(see logs/ui/*.jpg)已经有模有样了。

集成了自制的SQL Editor
着色参考了PL/SQL Developer的。简单的代码提示。Status Line
生产库也可以连了，应该是昨晚没有过防火墙.

代码还很十分粗糙！


1:46 2012-7-2
将KTable已经集成到Cyper Data Studio中了。
能连上本地数据库，进行Query data了！
今天向前了一大步。
现在郁闷的是。用JDBC始终连不上生产库！老报xxx is an undefined name.郁闷



16:32 2012-7-1
成功了！add/delete/sort终于TMD做好了！
蛋疼的rowMapping终于被我搞定了。大改！
不再使用父类的initialize()，甚至不使用父类的setContentAt().
rowMapping完全由我自己来控制，随心所欲，因此解决了之前让我折腾了很久的问题。

另：29日晚上和30日都在打星际！

接下来做保存数据.



22:48 2012-6-28
念在明天是ST最后一天的份上，晚上接到的新defect立马就改完提交了，没有拖到明天下午：）
现在又是自由身了
今天重写了KTable自带的KTableSortOnClick，使得排序时先前选中的行继续被选中
在sourceforge上提了个问题。不过KTable久已失修，两年来只有两个帖子。
最后还是自己摸索着解决了

现在开始解决昨晚睡觉前的问题，
add/delete row时排序信息丢失了！


17:46 2012-6-28
 * 目前的问题：<br>
 * 1.排序时，indicator依然指向先前的行，但是rowSelection不对，应该修改setSelection()方法，要和indicator位置一致.<br>
 * 06-28解决过程：<br>
 * 折腾的一段时间还是自己解决了。<br>
 * 目前的table有两个listener<br>
 * 第一个onclick是用来处理 表头的点击，排序专用，第二个onclick是用来处理cell的点击，当点击表头时是跳过的。<br>
 * 方法是在第一个onclick排序结束后，table.redraw调用之前加入如下代码：<br>
 * <pre>
 * 				
	//always keep the same row selected when doing sort.
	for (int i = 0; i < model.getRowCount(); i++) {
		String indicatorCell = (String) model.getContentAt(0, i);
		if (indicatorCell.equals(">")) {
			//keep selection and indicator on the same row.
			m_Table.setSelection(2, i, false);
			break;
		}
	}
 * </pre>
 
要增加一键删除新增的pool的功能，自动删除关联表的数据
方便测试数据重复利用

2012-6-28
27日晚间到28日凌晨
学习了Ktable的排序示例。
将其整合进来。
目前已知的问题：
在排序的状态下，增加和删除行，排序信息会丢失.

和Default相比，玩转SORT有以下几个步骤:
 * 1.让Model继承KTableSortedModel
 * 2.给m_FixedRenderer加上FixedCellRenderer.INDICATION_SORT样式
 * 3.initialize()方法使用父类中的，不要覆盖了.
 * 4.setContentAt()的调用必须放在initialize()方法调用之后
 * 5.给table增加addCellSelectionListener（实现fixedCellSelected方法）


2012-06-27
昨晚想复杂了
行号与生俱来，一旦确定，则不再变化，在组装list时给它固定的行号
将LinkedHashMap<String<Object>)替换成Row
删除DecorateRow
删除HiddenRow
使用new Model(table)，instead of table.setMode(model)

原来减法也可以这么简单.
接下来做排序。


2012-06-26
晚间到27凌晨
插入空白行已经实现，引入了HiddenRow，做减法时用，目前效果不好。
明天
按几种思路分别实现，想法要大胆，不要一条胡同走到死。

2012-06-26
抽象出了HeaderRow,BlankRow,DecoratedRow
尝试实现插入空白行，效果不错





